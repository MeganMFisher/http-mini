{
  "_args": [
    [
      {
        "raw": "babel-plugin-inferno@1.7.0",
        "scope": null,
        "escapedName": "babel-plugin-inferno",
        "name": "babel-plugin-inferno",
        "rawSpec": "1.7.0",
        "spec": "1.7.0",
        "type": "version"
      },
      "/Users/meganfisher/devmtn-teaching/Weekly/Week2/http-mini/node_modules/nwb"
    ]
  ],
  "_from": "babel-plugin-inferno@1.7.0",
  "_id": "babel-plugin-inferno@1.7.0",
  "_inCache": true,
  "_location": "/babel-plugin-inferno",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/babel-plugin-inferno-1.7.0.tgz_1484863843311_0.44933580700308084"
  },
  "_npmUser": {
    "name": "havunen",
    "email": "sampo.kivisto@live.fi"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-inferno@1.7.0",
    "scope": null,
    "escapedName": "babel-plugin-inferno",
    "name": "babel-plugin-inferno",
    "rawSpec": "1.7.0",
    "spec": "1.7.0",
    "type": "version"
  },
  "_requiredBy": [
    "/nwb"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-inferno/-/babel-plugin-inferno-1.7.0.tgz",
  "_shasum": "c9817dd3590d5af87f83c66e3b9403aa732e7776",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-inferno@1.7.0",
  "_where": "/Users/meganfisher/devmtn-teaching/Weekly/Week2/http-mini/node_modules/nwb",
  "bugs": {
    "url": "https://github.com/trueadm/babel-plugin-inferno/issues"
  },
  "dependencies": {
    "babel-plugin-syntax-jsx": "^6.18.0",
    "inferno-vnode-flags": "^1"
  },
  "description": "Turn JSX into Inferno virtual DOM",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-helper-replace-supers": "^6.18.0",
    "babel-plugin-transform-object-rest-spread": "^6.20.2",
    "babel-preset-es2015": "^6.18.0",
    "eslint": "^3.13.1",
    "mocha": "^3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c9817dd3590d5af87f83c66e3b9403aa732e7776",
    "tarball": "https://registry.npmjs.org/babel-plugin-inferno/-/babel-plugin-inferno-1.7.0.tgz"
  },
  "engines": {
    "node": ">= 4.6.0"
  },
  "gitHead": "c61a9051209b499c0c13f59e90745011d5b3790c",
  "homepage": "https://github.com/trueadm/babel-plugin-inferno#readme",
  "keywords": [
    "babel-plugin",
    "babel",
    "es2015",
    "es2016",
    "inferno",
    "jsx"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "havunen",
      "email": "sampo.kivisto@live.fi"
    },
    {
      "name": "lukeed",
      "email": "luke@lukeed.com"
    },
    {
      "name": "nightwolfz",
      "email": "ryan@megidov.com"
    },
    {
      "name": "trueadm",
      "email": "dg@domgan.com"
    }
  ],
  "name": "babel-plugin-inferno",
  "optionalDependencies": {},
  "readme": "# InfernoJS Babel Plugin\n\n> Plugin for babel 6.x to enable JSX for Inferno\n\nThis plugin transforms JSX code in your projects to [Inferno](https://github.com/trueadm/inferno) compatible virtual DOM. \n\n## How to install\n\n```bash\nnpm i --save-dev babel-plugin-inferno\n```\n\n## How to use\n\nAdd the plugin to your `package.json` and update the plugin section in your `.babelrc` file. Or if your Babel settings are located inside the `package.json` - update the plugin section there.\n\nIt's important that you also include the `babel-plugin-syntax-jsx`plugin.\n\nExample on a `.babelrc` file that will work with Inferno:\n\n\n```js\n{   \n    \"presets\": [ \"es2015\" ],\n    \"plugins\": [\"inferno\"]\n}\n```\n\n## Examples    \n\n```js\n\n// Render a simple div\nInfernoDOM.render(<div></div>, container); \n\n// Render a div with text\nInfernoDOM.render(<div>Hello world</div>, container); \n\n// Render a div with a boolean attribute\nInfernoDOM.render(<div autoFocus='true' />, container);\n\n```\n\n## Options\n\nBy default babel-plugin-inferno ships imports false. This is same behavior with ReactJS. You need to have Inferno declared in every JSX file. Even if not used by the code. Compiled code will have reference to global Inferno object.\n\nIf the environment supports modules (Webpack / Rollup) you can enable \"imports\" option which will import createVNode from Inferno. This allows tree-shaking to happen and Inferno does not need to be imported if not needed by the user land code.\n\nSetting imports true can be done following way inside babelrc file\n\n```js\n{\n    \"presets\": [ \"es2015\" ],\n    \"plugins\": [[\"inferno\", {\"imports\": true}]]\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/trueadm/babel-plugin-inferno.git"
  },
  "scripts": {
    "lint": "eslint lib",
    "lintfix": "eslint lib --fix",
    "test": "mocha --compilers js:babel/register"
  },
  "version": "1.7.0"
}
